defaults:
  - labels: default_labels
  - _self_
  - override hydra/hydra_logging: disabled
  - override hydra/job_logging: disabled


files:
  border_path: null
  fibers_path: null
  coords_path: null

segment: "full"

fibers:
  fiber_color: "red"
  fiber_scale: 20
  nb_points: 10000

coords:
  aha: false
  cmap: "coolwarm"
  opacity: 1
  nb_points: null

cut:
  use: false
  along: "x"
  position: null
  reverse: false

extract:
  use: false
  extractor_path: null
  value: 0.5
  tolerance: 0.01

isolines:
  use: false
  start: 0
  end: 1
  step: 0.05
  tolerance: 0.005
  line_width: 1
  color: "white"
  
hydra:
  run:
    dir: .
  
  output_subdir: null

  help:
    header: ============== Visualizing fibers and coordinates ==============

    footer: |-
      Powered by Hydra (https://hydra.cc)
      Use --hydra-help to view Hydra specific help

    template: |-
      ${hydra.help.header}

      == Changing Parameters ==

      Parameters can be changed in the `configs/visualization_config.yaml` file. You can also use the command line to override parameters, for example:
      python run_visualization.py fibers_path=/path/to/fibers.pkl files.border_path=/path/to/newborder.pkl segment=epi fibers.fiber_color=blue

      == Parameter Descriptions ==

      - files:
          - border_path: (str) path to the input border file. This is a new_border.pkl output of the ventricles pipeline, containing tags for each surface in a SparseField object. Can be omitted if the segment is "full".
          - fibers_path: (str) path to the input fibers file. This is a fibers.pkl output of the ventricles pipeline, containing the fibers in a pickle format. Only one of fibers_path or coords_path must be provided.
          - coords_path: (str) path to the input coordinates file. This is one of apicobasal.pkl, transmural.pkl,... as generated by the ventricles pipeline when save_coords=true. Only one of fibers_path or coords_path must be provided.
      - segment: (str) segment of the ventricles to visualize. Can be one of "full", "epi", "endo", "base". If it is different than "full", border_path must be provided.
      - fibers:
          - fiber_color: (str) color of the fibers to visualize. Can be any valid matplotlib color.
          - fiber_scale: (float) scale factor for the fibers.
          - nb_points: (int) number of fibers to visualize. If null, all fibers are visualized.
      - coords:
          - aha: (bool) whether the field visualized is the output of the "define_AHA_segments.py" script. If true, a custom visualization is used with overriden cmap and text labels.
          - cmap: (str) colormap to use for the coordinates visualization. Can be any valid matplotlib colormap.
          - opacity: (float) opacity of the coordinates visualization, between 0 and 1.
          - nb_points: (int) number of points to visualize. If not provided, all points are visualized.
      - cut:
          - use: (bool) whether to cut the geometry along a plane to visualize a cross-section.
          - along: (str) axis along which to cut the geometry. Can be "x", "y", or "z".
          - position: (float) position along the axis to cut the geometry. If null, the cut will be made at the middle of the given axis.
          - reverse: (bool) If true, the visualization mask is flipped as to visualize the other part of the cut
      - extract:
          - use: (bool) whether to extract a surface from the geometry based on a given coordinate field.
          - extractor_path: (str) path to the coordinate pickle file used to select a surface.
          - value: (float) value of the coordinate to extract
          - tolerance: (float) tolerance for the extraction, used to select points within a given range of the given value.
      - isolines:
          - use: (bool) whether to visualize isolines on the coordinates.
          - start: (float) starting value for the isolines.
          - end: (float) ending value for the isolines.
          - step: (float) step between isolines.
          - tolerance: (float) tolerance for the isolines, used to select points within a given range of values.
          - line_width: (int) width of the isolines
          - color: (str) color of the isolines

      To these parameters are added those of the selected configuration group: labels.

      - labels:
          - endo_label: label for the endocardium in the border file
          - epi_label: label for the epicardium in the border file
          - base_label: label for the base in the border file
          
      == Configuration Groups ==

      Groups are used in hydra to organize bundles of parameters. For example, this method supports different groups for the labels in the tagged border file.
      You can even create your own groups in the appropriate folder of the `configs` directory. Here are the currently available groups:
      $APP_CONFIG_GROUPS
      
      ${hydra.help.footer}